#!/usr/bin/env bash
COUNT="$#"
COMMAND="$1"
MESSAGE="$1"
OP="$2"
shift 2
WHEN="$*"

# Display help if no parameters or help command
if [ $COUNT -eq 0 ] || [ "$COMMAND" = "help" ] || [ "$COMMAND" = "--help" ] || [ "$COMMAND" = "-h" ]; then
  echo "COMMAND"
  echo "    remind <message> <time>"
  echo "    remind <command>"
  echo
  echo "DESCRIPTION"
  echo "    Displays notification at specified time"
  echo
  echo "EXAMPLES"
  echo '    remind "Hi there" now'
  echo '    remind "Time to wake up" in 5 minutes'
  echo '    remind "Dinner" in 1 hour'
  echo '    remind "Take a break" at noon'
  echo '    remind "Are you ready?" at 13:00'
  echo '    remind list'
  echo '    remind view <id>'
  echo '    remind clear'
  echo '    remind help'
  exit
fi

# Check presence of `at` command
if ! command -v at >/dev/null; then
  echo "remind: AT utility is required but not installed on your system."
  echo "Install it with your package manager of choice, for example 'pacman -S at'"
  exit
fi

# Run commands: list, clear
if [ $COUNT -gt 0 ]; then
  if [ "$COMMAND" = "list" ]; then
    at -l | sort -k 6 -k 3 -k 4 -k 5
  elif [ "$COMMAND" = "view" ]; then
    at -c "$OP" | awk -F "'" '/notify-send/ {print $2}'
  elif [ "$COMMAND" = "clear" ]; then
    atq | cut -f1 | while read -r job
    do
      at -r "$job"
    done
  else
    echo "remind: unknown command $COMMAND. Type 'remind' without any parameters to see syntax."
  fi
  exit
fi

# Determine time of notification
if [ "$OP" = "in" ]; then
  TIME="now + $WHEN"
elif [ "$OP" = "at" ]; then
  TIME="$WHEN"
elif [ "$OP" = "now" ]; then
  TIME="now"
else
  echo "remind: invalid time operator '$OP'"
  exit
fi

# Schedule the notification
if echo "notify-send '$MESSAGE' 'Reminder' -u critical" | at "$TIME" 2>/dev/null; then
  echo "Notification scheduled at $TIME"
else
  echo "Failed to schedule notification"
fi
