#!/usr/bin/env bash

# Set the overall status
get_status() {
    battery_status="";
    if has_battery; then
        battery_status=" $(get_battery_status) |";
    fi

    weather="$(cat "$HOME/.config/weather/current")"
    echo "${weather} |${battery_status} "$(get_volume)" | $(get_datetime)";
}

get_net_info() {
    info="$(nmcli)"
    device="$(echo "$info" | pcregrep -o1 -i "connected to (.*)")"
    if [[ ! -z "$device" ]]; then
        type="$(echo "$info" | awk 'NR==3 { print $1 }')"
        printf "%s: %s" "$type" "$device"
    fi
}

get_volume() {
    vol="$(pamixer --get-volume-human)"
    if [[ "$vol" == "muted" ]]; then
        printf "🔇 %s" "$vol"
    else
        printf "🔊 %s" "$vol"
    fi
}

get_datetime() {
    date +"📅 %a %d %b %Y | 🕓 %I:%M %p %Z"
}

# Battery

battery="BAT0";

has_battery() {
    if [ -d /sys/class/power_supply/$battery ]; then
        return 0;
    fi
    return 1;
}

get_battery_status() {
    charge="$(get_charge)"
    if [ "$(get_charging_status)" == "Discharging" ]; then
        icon=""
        if [[ "$charge" -le 10 ]]; then
            icon=""
        elif [[ "$charge" -le 20 ]]; then
            icon=""
        elif [[ "$charge" -le 30 ]]; then
            icon="" 
        elif [[ "$charge" -le 40 ]]; then
            icon="" 
        elif [[ "$charge" -le 50 ]]; then
            icon="" 
        elif [[ "$charge" -le 60 ]]; then
            icon="" 
        elif [[ "$charge" -le 70 ]]; then
            icon="" 
        elif [[ "$charge" -le 80 ]]; then
            icon="" 
        elif [[ "$charge" -le 90 ]]; then
            icon="" 
        elif [[ "$charge" -le 100 ]]; then
            icon="" 
        else
            icon=""
        fi
    else
        icon=""
    fi
    echo ""$icon" "$charge"%"
}

get_charging_status() {
    cat "/sys/class/power_supply/$battery/status"
}

get_charge() {
    cat "/sys/class/power_supply/$battery/capacity"
}

# Set the status bar

# Last 3 numbers are RGB (0-255) values.
# blue=$'\e[38;2;69;133;136m'
# yellow=$'\e[38;2;250;189;47m'

arrow=""
font_reset="\e[10m"
font_arrow="\e[15m"

gray_fg=$'\e[38;2;168;153;132m'
yellow_fg=$'\e[38;2;250;219;47m'
red_fg=$'\e[38;2;204;36;29m'

gray_bg=$'\e[48;2;168;153;132m'
yellow_bg=$'\e[48;2;250;219;47m'
red_bg=$'\e[48;2;204;36;29m'


while true
do
    xsetroot -name "${red_bg}${arrow}$(get_status)";
    sleep 1m;
done

